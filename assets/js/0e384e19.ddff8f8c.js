"use strict";(self.webpackChunkdoc=self.webpackChunkdoc||[]).push([[9671],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=i,f=u["".concat(l,".").concat(d)]||u[d]||c[d]||a;return n?r.createElement(f,o(o({ref:t},m),{},{components:n})):r.createElement(f,o({ref:t},m))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},426:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},metadata:function(){return l},toc:function(){return p},default:function(){return c}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],s={sidebar_position:1,title:"Getting started"},l={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Getting Started",description:"Let's discover mockseries in less than 5 minutes \ud83d\ude80",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/docs/intro",editUrl:"https://github.com/cyrilou242/mockseries/edit/master/website/docs/intro.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Getting started"},sidebar:"tutorialSidebar",next:{title:"Combining signals",permalink:"/docs/tutorials/interaction-scalar-operations"}},p=[{value:"1. Install mockseries",id:"1-install-mockseries",children:[]},{value:"2. Create a timeseries generator",id:"2-create-a-timeseries-generator",children:[]},{value:"3. Preview",id:"3-preview",children:[]},{value:"4. Generate values",id:"4-generate-values",children:[]},{value:"5. Plot or write to csv",id:"5-plot-or-write-to-csv",children:[]}],m={toc:p};function c(e){var t=e.components,s=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},m,s,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Let's discover ",(0,a.kt)("strong",{parentName:"p"},"mockseries in less than 5 minutes")," \ud83d\ude80"),(0,a.kt)("h2",{id:"1-install-mockseries"},"1. Install mockseries"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"pip install mockseries\n")),(0,a.kt)("h2",{id:"2-create-a-timeseries-generator"},"2. Create a timeseries generator"),(0,a.kt)("p",null,"A timeseries can be expressed as a ",(0,a.kt)("a",{parentName:"p",href:"https://otexts.com/fpp2/components.html"},"combination of 3 components"),": trend, seasonality and noise.  "),(0,a.kt)("p",null,"The trend is the long term, average change of the timeseries, such as the increase in CO2 emissions.",(0,a.kt)("br",{parentName:"p"}),"\n","Seasonality is a cyclic pattern in the timeseries, such as the impact of the day-night cycle.",(0,a.kt)("br",{parentName:"p"}),"\n","Noise represents irregular and random changes of the timeseries.   "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from datetime import timedelta\nfrom mockseries.trend import LinearTrend\nfrom mockseries.seasonality import SinusoidalSeasonality\nfrom mockseries.noise import RedNoise\n\ntrend = LinearTrend(coefficient=2, time_unit=timedelta(days=4), flat_base=100)\nseasonality = SinusoidalSeasonality(amplitude=20, period=timedelta(days=7)) \\\n              + SinusoidalSeasonality(amplitude=4, period=timedelta(days=1))\nnoise = RedNoise(mean=0, std=3, correlation=0.5)\n\ntimeseries = trend + seasonality + noise\n")),(0,a.kt)("p",null,"Here, ",(0,a.kt)("strong",{parentName:"p"},"2")," seasonalities ",(0,a.kt)("strong",{parentName:"p"},"with a different period")," are combined. It's as easy as an addition !",(0,a.kt)("br",{parentName:"p"}),"\n","Many types of trends, seasonalities and noises are available.",(0,a.kt)("br",{parentName:"p"}),"\n","Just combine them with the operators ",(0,a.kt)("strong",{parentName:"p"},"+"),", ",(0,a.kt)("strong",{parentName:"p"},"-")," and ",(0,a.kt)("strong",{parentName:"p"},"*"),".  "),(0,a.kt)("h2",{id:"3-preview"},"3. Preview"),(0,a.kt)("p",null,"Quickly plot your signals "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'# preview on minute, hour, day, month, year \nseasonality.preview_week()\ntimeseries.preview_month()\n##<style="width:100%; aspect-ratio:9/6;" src="">\n')),(0,a.kt)("p",{align:"center"},(0,a.kt)("img",{src:"/img/tutorial/seasonality_preview.png",width:"48%",alt:"Seasonality preview"}),"\xa0 \xa0 \xa0 \xa0",(0,a.kt)("img",{src:"/img/tutorial/timeseries_preview.png",width:"48%",alt:"Timeseries preview"})),(0,a.kt)("h2",{id:"4-generate-values"},"4. Generate values"),(0,a.kt)("p",null,"Sample your timeseries on a timeframe.  "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from datetime import datetime\nfrom mockseries.utils import datetime_range\n\ntime_points = datetime_range(\n    granularity=timedelta(hours=1),\n    start_time=datetime(2021, 5, 31),\n    end_time=datetime(2021, 8, 30),\n)\nts_values = timeseries.generate(time_points=time_points)\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"datetime_range")," helps you get the time points of a given granularity in a timeframe.",(0,a.kt)("br",{parentName:"p"}),"\n","For instance:",(0,a.kt)("br",{parentName:"p"}),"\n","timeframe of 1 hour, with a granularity of 1 ",(0,a.kt)("strong",{parentName:"p"},"minute"),": 60 points;",(0,a.kt)("br",{parentName:"p"}),"\n","timeframe of 1 hour, with a granularity of 1 ",(0,a.kt)("strong",{parentName:"p"},"second"),": 3600 points. "),(0,a.kt)("h2",{id:"5-plot-or-write-to-csv"},"5. Plot or write to csv"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},'from mockseries.utils import plot_timeseries, write_csv\n\nplot_timeseries(time_points, ts_values)\nwrite_csv(time_points, ts_values, "hello_mockseries.csv")\n')),(0,a.kt)("p",null,"You will get something like this:"),(0,a.kt)("div",{style:{textAlign:"center"}},(0,a.kt)("p",null,(0,a.kt)("img",{alt:"Getting started timeseries",src:n(9498).Z}))),(0,a.kt)("p",null,"Now it's your turn !",(0,a.kt)("br",{parentName:"p"}),"\n","Go to the next page to learn how to combine signals.",(0,a.kt)("br",{parentName:"p"}),"\n","Go directly to the ",(0,a.kt)("a",{parentName:"p",href:"./API%20Reference/mockseries/main"},"API Reference")," to checkout the available types of trends, seasonalities and noises."))}c.isMDXComponent=!0},9498:function(e,t,n){t.Z=n.p+"assets/images/getting_started_timeseries-c96e3eb5db587998a5796089890dc42c.png"}}]);